"use strict";class t{constructor(t,s){this.x=t,this.y=s}add({x:s,y:i}){return new t(this.x+s,this.y+i)}sub({x:s,y:i}){return new t(this.x-s,this.y-i)}scale(s){return new t(this.x*s,this.y*s)}rotate(s){return new t(this.x*Math.cos(s)-this.y*Math.sin(s),this.x*Math.sin(s)+this.y*Math.cos(s))}distance({x:t,y:s}){return((this.x-t)**2+(this.y-s)**2)**.5}round(){return new t(Math.round(this.x),Math.round(this.y))}static intersection({x:s,y:i},{x:e,y:n},{x:a,y:h},{x:r,y:o}){const d=(o-h)*(e-s)-(r-a)*(n-i);if(0===d)return null;const l=((r-a)*(i-h)-(o-h)*(s-a))/d,c=((e-s)*(i-h)-(n-i)*(s-a))/d;return l>=0&&l<=1&&c>=0&&c<=1?new t(s+l*(e-s),i+l*(n-i)):null}}class s extends t{constructor(t,s,i){super(t,s),this.timestamp=i}static fromPoint(t,i){return new s(t.x,t.y,i)}}var i={parts:[{name:"rock",bounds:[43,84,33,94,0,0],data:[-4288,0,6,-2,4,5,-2,19,-4,5,19,-111,0,-2,5,19,-3,5,6,4,-3,5,-2,19,-3,5,-2,19,5,-98,0,4,-11,5,-2,19,-3,5,6,4,-4,5,19,-4,5,19,5,6,-94,0,-4,4,-2,5,19,-2,5,19,-4,5,-2,19,-4,5,6,4,-4,5,19,-4,5,19,5,-2,6,-93,0,-2,4,-3,5,-2,19,5,-2,19,-3,5,-2,19,-5,5,6,4,-5,5,19,-2,5,-2,19,-2,5,-2,6,-92,0,-2,4,5,-3,19,5,-3,19,-3,5,-3,19,-4,5,6,4,-4,5,-2,19,-2,5,19,-3,5,-2,6,-92,0,-2,4,5,19,-5,5,19,-3,5,19,5,19,-3,5,6,-2,4,-3,5,-2,19,-2,5,19,5,19,-3,5,-2,6,-91,0,-2,4,5,19,-2,5,19,-2,5,19,-3,5,19,-2,5,-2,19,-2,6,-2,4,-3,5,-3,19,5,-4,19,-2,5,-3,6,-90,0,4,-2,19,-2,5,-2,19,-2,5,19,-3,5,19,-3,5,19,6,-2,4,-3,5,-2,19,5,-3,19,-2,5,19,-3,5,-2,6,-90,0,-2,19,-3,5,19,-3,5,19,-3,5,19,-3,5,19,6,-2,4,-3,5,19,-3,5,19,-3,5,19,-3,5,-2,6,-89,0,-3,19,-3,5,19,-3,5,19,5,-4,19,-2,5,19,6,-2,4,-2,5,-3,19,-2,5,-2,19,-2,5,-2,19,-3,5,6,-89,0,19,-2,4,19,-2,5,19,-2,5,-4,19,-2,5,19,-3,5,6,-2,4,5,-2,19,5,19,-3,5,19,-3,5,19,-5,5,-88,0,19,-2,4,19,-2,5,19,5,-6,19,5,-2,19,-3,5,-2,4,-4,5,19,-3,5,-2,19,-3,5,19,-4,5,-88,0,19,-2,4,-2,19,5,19,5,19,-2,5,19,5,19,-2,5,19,-3,5,-2,4,-4,5,19,-4,5,-3,19,5,19,-4,5,-89,0,-2,4,5,-3,19,-4,5,19,5,-2,19,5,-2,19,-2,5,-3,4,-4,5,19,-2,5,19,-2,5,19,-2,5,19,-2,5,6,-89,0,-3,4,5,19,-2,5,19,5,-2,19,-2,5,19,-2,5,19,-2,5,-3,4,-4,5,19,-2,5,19,-2,5,19,5,-2,19,-2,5,6,-89,0,-3,4,5,19,-2,5,19,5,19,-3,5,19,5,19,-3,5,6,-3,4,-3,5,19,5,-3,19,-3,5,19,-3,5,-2,6,-88,0,-3,4,5,19,5,-2,19,5,19,-3,5,19,-5,5,6,-4,4,5,19,-2,5,-4,19,-2,5,19,-4,5,6,-88,0,-3,4,5,-3,19,-4,5,-2,19,-2,5,19,-3,5,-2,6,-3,4,-4,5,19,-2,5,-2,19,5,-2,19,-3,5,6,-88,0,4,-2,19,-2,5,19,-4,5,-3,19,-2,5,-2,19,-3,5,6,-4,4,-3,5,19,-2,5,19,5,-3,19,-3,5,6,-88,0,4,19,-2,4,19,-4,5,-2,19,-5,5,19,-4,5,6,-3,4,-6,5,19,5,-4,19,-2,5,6,-88,0,4,19,-2,4,-2,19,-9,5,-2,19,-4,5,6,-4,4,-4,5,-2,19,5,-2,19,5,-2,19,-2,5,-89,0,19,-3,4,19,-4,5,19,-4,5,19,-10,4,-4,5,19,5,-2,19,-3,5,19,-2,5,-89,0,19,-2,4,-2,19,4,-2,5,-2,19,-2,4,-2,19,-4,4,5,19,-2,5,-4,4,-3,5,19,5,19,-5,5,-2,19,-89,0,19,4,-2,19,-5,4,-4,19,-2,4,-4,5,19,-2,5,6,-2,4,19,4,-2,5,19,5,19,-5,5,-2,19,-89,0,19,4,19,-5,4,-2,19,-2,5,-2,6,4,-5,19,-2,5,-3,6,4,19,4,-9,5,-2,19,-88,0,-2,19,0,19,-5,4,5,-2,19,-2,5,6,4,19,-3,5,-2,19,-2,5,-3,6,-3,19,-2,4,-7,5,-2,19,-87,0,19,-2,0,19,-3,4,-3,5,-2,19,-2,5,6,-2,4,-3,5,-2,19,-3,5,-2,6,4,5,-2,19,-8,4,0,19,-87,0,19,0,19,-3,4,-5,5,19,-3,5,6,4,-2,5,-2,19,-6,5,4,-2,5,19,-4,4,19,-2,5,6,0,19,-89,0,19,0,-2,4,-5,5,19,-3,5,6,-2,4,5,19,-6,5,-2,4,-2,5,-2,19,-3,5,19,5,6,-2,0,19,-89,0,19,0,-2,4,-6,5,19,-3,5,4,19,4,-5,5,-2,4,-5,5,19,-3,5,-3,19,-2,0,19,-89,0,19,0,-3,4,-5,5,19,-3,5,4,-3,19,5,19,-3,4,-5,5,-2,19,-5,5,19,-94,0,-4,4,-4,5,-4,4,5,6,4,-3,19,4,-6,5,-2,19,5,19,-3,5,6,19,-95,0,-3,4,-3,5,-3,4,-4,5,-3,6,-3,4,-4,5,-2,19,-2,5,-2,19,-2,5,6,-2,19,-94,0,-10,4,-5,5,6,-2,4,-3,5,-3,19,-4,5,19,-2,5,-2,0,19,-94,0,-5,4,-4,19,-2,4,-4,5,-3,4,-3,5,19,-4,5,-3,19,-2,5,-2,0,19,-94,0,4,19,4,-5,5,-2,19,-2,4,-2,5,-5,4,-2,5,-2,19,-2,5,19,-2,5,19,5,-98,0,4,19,4,-5,5,19,5,-10,4,-2,5,-2,19,5,19,-2,5,19,5,-98,0,4,19,4,-4,5,-2,19,-6,5,6,-6,4,-3,5,19,-3,5,19,-99,0,19,4,-4,5,19,-3,5,-2,19,-2,5,-3,6,4,-2,19,-2,4,-2,5,19,-3,5,19,-99,0,19,4,-3,5,-2,19,-4,5,19,-3,5,-3,6,4,-3,19,4,-5,5,19,-99,0,19,-2,4,-2,5,19,-5,5,19,-4,5,-2,6,-2,5,-3,19,-4,4,0,-2,19,-98,0,19,-2,4,-2,5,19,-3,5,-3,19,-3,5,4,5,-4,19,-2,5,6,-3,4,-2,0,19,-97,0,-2,19,-2,4,-2,5,-2,19,5,-2,19,5,19,-2,5,-2,4,-2,5,-2,19,-3,5,-4,6,-2,0,19,-97,0,-2,19,-3,4,-2,5,-3,19,-2,5,19,5,-2,4,-4,5,-2,19,-3,5,-3,6,-2,0,19,-98,0,19,0,-2,4,-3,5,-2,19,5,19,5,-2,19,-3,4,-2,5,19,5,-2,19,-3,5,-103,0,19,-3,4,-2,5,19,-2,5,-4,4,-2,19,4,5,-2,19,-2,5,-2,19,-2,5,-104,0,-4,4,5,19,5,-3,4,5,-2,4,-4,19,-3,5,-3,19,-106,0,4,-2,19,-5,4,-4,5,-2,4,19,-3,4,-2,19,5,19,-106,0,-2,4,19,-3,4,5,19,-4,5,19,6,-7,4,19,-107,0,4,19,4,-3,5,19,-3,5,-2,19,-3,6,4,-2,6,5,0,19,-107,0,4,19,4,-3,5,-4,19,5,19,-2,5,-3,6,-2,5,0,19,-108,0,19,-2,4,-3,5,-2,19,-2,5,-2,19,-4,5,4,-2,0,19,-108,0,19,-3,4,-2,5,-3,19,-2,5,19,-3,5,-2,4,-110,0,-2,19,-4,4,5,19,5,19,-2,5,-2,19,5,-2,4,-111,0,19,-2,0,-3,4,-2,19,-2,5,19,5,-2,19,-2,4,-112,0,19,-3,0,-2,4,19,-6,5,-2,19,-113,0,19,-4,0,4,19,4,-3,5,-3,4,19,-119,0,19,-5,4,-2,0,19,-119,0,19,-2,4,-5,0,19,-119,0,19,-127,0,19,-2085059,0]},{name:"wizard",bounds:[42,85,46,81,0,5],data:[-5950,0,-4,29,-123,0,29,-4,1,29,-122,0,29,-4,1,29,-121,0,29,-6,1,29,-120,0,29,-6,1,29,-120,0,29,-6,1,29,-120,0,29,-6,1,29,-120,0,29,-6,1,29,-106,0,-2,29,30,-12,0,29,-4,1,29,-12,0,30,-2,29,-90,0,-2,28,-2,29,30,-3,29,-6,0,30,-10,29,30,-6,0,-3,29,30,-2,29,-2,28,-89,0,28,-2,29,30,-10,29,-3,30,-4,29,-3,30,-10,29,30,-2,29,28,-91,0,-2,29,30,-13,29,-4,30,-13,29,30,-2,29,-92,0,29,30,-32,29,30,29,-92,0,29,30,-12,0,-8,29,-12,0,30,29,-106,0,30,-6,29,30,-120,0,30,-6,29,30,-120,0,29,30,-4,29,30,29,-120,0,29,30,-4,29,30,29,-120,0,29,30,-4,29,30,29,-120,0,29,30,-4,29,30,29,-120,0,29,30,-4,29,30,29,-120,0,30,-6,29,30,-119,0,30,-8,29,30,-118,0,-10,29,-118,0,-10,29,-118,0,-10,29,-118,0,-10,29,-118,0,-10,29,-117,0,-12,29,-116,0,-12,29,-116,0,-12,29,-116,0,-12,30,-116,0,-12,29,-116,0,-12,29,-118,0,-2,28,-4,0,-2,28,-120,0,-2,28,-4,0,-2,28,-13033,0,-2,33,-34,0,-2,33,-89,0,-4,33,-32,0,-4,33,-88,0,-4,33,-32,0,-4,33,-89,0,-2,33,-34,0,-2,33,-15833,0,-4,33,-32,0,-4,33,-87,0,-6,33,-30,0,-6,33,-86,0,-6,33,-30,0,-6,33,-86,0,-6,33,-30,0,-6,33,-86,0,-6,33,-30,0,-6,33,-87,0,-4,33,-32,0,-4,33,-15576,0,-4,33,-32,0,-4,33,-87,0,-6,33,-30,0,-6,33,-85,0,-8,33,-28,0,-8,33,-84,0,-3,33,-2,32,-3,33,-28,0,-3,33,-2,32,-3,33,-84,0,-3,33,-2,32,-3,33,-28,0,-3,33,-2,32,-3,33,-84,0,-8,33,-28,0,-8,33,-85,0,-6,33,-30,0,-6,33,-87,0,-4,33,-32,0,-4,33,-15448,0,-4,33,-32,0,-4,33,-87,0,-6,33,-30,0,-6,33,-85,0,-3,33,-2,32,-3,33,-28,0,-3,33,-2,32,-3,33,-84,0,-2,33,-4,32,-2,33,-28,0,-2,33,-4,32,-2,33,-84,0,-2,33,-4,32,-2,33,-28,0,-2,33,-4,32,-2,33,-84,0,-3,33,-2,32,-3,33,-28,0,-3,33,-2,32,-3,33,-85,0,-6,33,-30,0,-6,33,-87,0,-4,33,-32,0,-4,33,-15448,0,-4,33,-32,0,-4,33,-87,0,-2,33,-2,32,-2,33,-30,0,-2,33,-2,32,-2,33,-85,0,-2,33,-4,32,-2,33,-28,0,-2,33,-4,32,-2,33,-84,0,33,-6,32,33,-28,0,33,-6,32,33,-84,0,33,-6,32,33,-28,0,33,-6,32,33,-84,0,-2,33,-4,32,-2,33,-28,0,-2,33,-4,32,-2,33,-85,0,-2,33,-2,32,-2,33,-30,0,-2,33,-2,32,-2,33,-87,0,-4,33,-32,0,-4,33,-2007468,0]},{name:"sparkles",bounds:[60,66,60,66,0,1],data:[-7743,0,33,-127,0,33,-126,0,33,32,33,-123,0,-2,33,-3,32,-2,33,-123,0,33,32,33,-126,0,33,-127,0,33,-15615,0,32,-127,0,32,-126,0,32,31,32,-123,0,-2,32,-3,31,-2,32,-123,0,32,31,32,-126,0,32,-127,0,32,-2072256,0]},{name:"planet",bounds:[5,120,22,106,0,0],data:[-2907,0,-8,6,-112,0,-20,6,-99,0,-33,6,-81,0,-8,33,-4,0,-38,6,-72,0,-19,33,-39,6,-66,0,-26,33,-38,6,-61,0,-30,33,-39,6,-57,0,-35,33,-9,6,5,-2,6,5,-2,6,5,6,5,-2,6,5,-16,6,-53,0,29,-39,33,-3,6,-2,5,-15,6,5,-15,6,-52,0,29,-16,33,-3,29,-21,33,-20,6,5,-14,6,-51,0,-2,29,-12,33,-2,29,-3,33,-3,29,-21,33,-21,6,5,-13,6,-49,0,29,-14,33,29,-3,33,-4,29,-23,33,-7,0,-14,6,5,-12,6,-46,0,-18,33,29,-2,33,-4,29,-24,33,-10,0,-11,6,5,-11,6,-44,0,29,-19,33,29,-3,33,-3,29,-25,33,-10,0,-11,6,5,-11,6,-43,0,-53,33,-10,0,-22,6,-42,0,-55,33,-11,0,-10,6,5,-9,6,-41,0,-55,33,-2,29,-11,0,-10,6,5,-8,6,-41,0,-57,33,29,-10,0,-19,6,-40,0,-9,33,-2,29,-42,33,29,-4,33,29,-11,0,-10,6,5,-7,6,-39,0,-7,33,-2,29,-2,33,-2,29,-41,33,-2,29,-5,33,-10,0,-18,6,-38,0,-8,33,29,-3,33,-2,29,-42,33,-2,29,-5,33,-10,0,-9,6,5,-7,6,-37,0,-8,33,-2,29,-3,33,-2,29,-43,33,-3,29,-3,33,-11,0,-16,6,-37,0,-8,33,-3,29,-2,33,-2,29,-46,33,29,-3,33,-10,0,-8,6,5,-7,6,-36,0,-10,33,-2,29,-25,33,-2,29,33,-3,29,-23,33,-10,0,-16,6,-36,0,-37,33,29,-2,33,-3,29,-24,33,-9,0,-8,6,5,-7,6,-35,0,-37,33,-2,29,-3,33,-2,29,-24,33,-9,0,-16,6,-35,0,-37,33,29,-4,33,-2,29,-25,33,-7,0,-8,6,5,-7,6,-35,0,-39,33,29,-4,33,29,-26,33,-6,0,-16,6,-34,0,5,-39,33,-3,29,-29,33,-6,0,-15,6,-34,0,-2,5,-72,33,-5,0,-15,6,-33,0,-2,5,-73,33,-4,0,-8,6,5,-7,6,-32,0,-3,5,-73,33,-4,0,-15,6,-32,0,-4,5,-73,33,-4,0,-7,6,5,-7,6,-31,0,-5,5,-74,33,-2,0,-15,6,-31,0,-5,5,-75,33,-2,0,-7,6,5,-7,6,-30,0,-6,5,-75,33,0,-7,6,5,-7,6,-30,0,-7,5,-25,33,-4,29,-46,33,0,-15,6,-30,0,-7,5,29,-22,33,29,-2,33,-4,29,-45,33,-15,6,-30,0,-7,5,4,29,-21,33,-2,29,-4,33,-3,29,-44,33,-7,6,5,-6,6,-30,0,-7,5,4,5,-2,29,-19,33,29,-7,33,-2,29,-30,33,29,-12,33,-14,6,-30,0,-10,5,-2,29,-19,33,-2,29,-6,33,-2,29,-27,33,-2,29,33,-2,29,-10,33,-8,6,5,-6,6,-29,0,-11,5,-2,29,-20,33,29,-6,33,-2,29,-27,33,29,-2,33,-2,29,-10,33,-14,6,-30,0,-7,5,4,-3,5,-3,29,-19,33,29,-6,33,-2,29,-27,33,29,33,-2,29,-10,33,-15,6,-29,0,-12,5,-3,29,-19,33,-2,29,-4,33,-3,29,-40,33,-8,6,5,-6,6,-29,0,-8,5,4,-4,5,-4,29,-19,33,-2,29,-3,33,-2,29,-40,33,-8,6,5,-6,6,-29,0,-14,5,-5,29,-19,33,-2,29,-17,33,29,33,29,-23,33,-8,6,5,-6,6,-30,0,-7,5,4,-5,5,0,-5,29,-38,33,29,33,29,-22,33,-15,6,-30,0,-14,5,-2,0,-5,29,-2,33,-2,29,-33,33,29,-23,33,-8,6,5,-7,6,-30,0,-7,5,4,-5,5,-3,0,-5,29,-2,33,-3,29,-55,33,-8,6,5,-6,6,-32,0,-13,5,-3,0,-6,29,-2,33,-2,29,-54,33,-16,6,-31,0,-13,5,-5,0,-6,29,33,-2,29,-53,33,-8,6,5,-6,6,-33,0,-7,5,4,-5,5,-5,0,-6,29,33,-2,29,-52,33,-15,6,-33,0,-14,5,-5,0,-9,29,-51,33,-8,6,5,-7,6,-33,0,-7,5,4,-6,5,-5,0,-8,29,-50,33,-16,6,-35,0,-13,5,-7,0,-7,29,-49,33,-9,6,5,-6,6,-35,0,-14,5,-7,0,-9,29,-46,33,-9,6,5,-7,6,-35,0,-14,5,-8,0,-9,29,-44,33,-16,6,-36,0,-8,5,4,-6,5,-9,0,-8,29,-42,33,-9,6,5,-6,6,-2,33,-36,0,-15,5,-9,0,-10,29,-39,33,-8,6,5,-8,6,33,-37,0,-7,5,4,-7,5,-10,0,-9,29,-37,33,-18,6,-2,33,-36,0,-16,5,-10,0,-10,29,-12,33,-5,29,-17,33,-10,6,5,-7,6,-3,33,-37,0,-16,5,-11,0,-10,29,-8,33,29,-3,33,-4,29,-15,33,-18,6,-5,33,-37,0,-8,5,4,-8,5,-10,0,-12,29,-5,33,-2,29,-5,33,-3,29,-13,33,-10,6,5,-7,6,-5,33,-38,0,-18,5,-10,0,-12,29,-4,33,29,-6,33,-3,29,-11,33,-10,6,5,-8,6,-5,33,-39,0,-18,5,-11,0,-12,29,-3,33,29,-6,33,-4,29,-8,33,-11,6,5,-8,6,-6,33,-39,0,-19,5,-10,0,-13,29,33,-2,29,-7,33,-3,29,-6,33,-11,6,5,-8,6,-6,33,-41,0,-9,5,4,-9,5,-11,0,-15,29,-7,33,-3,29,-3,33,-22,6,-7,33,-41,0,-20,5,-10,0,-15,29,-7,33,-3,29,33,-13,6,5,-8,6,-8,33,-42,0,-22,5,-10,0,-15,29,-6,33,-13,6,-2,5,-8,6,-9,33,-43,0,-23,5,-10,0,-15,29,-3,33,-13,6,5,-9,6,-9,33,29,33,-44,0,-10,5,4,-15,5,-6,0,-14,29,-16,6,5,-9,6,-8,33,-2,29,-46,0,-29,5,-5,0,-4,29,-21,6,-2,5,-9,6,-9,33,-2,29,-48,0,-32,5,-35,6,-11,33,29,-50,0,-32,5,-21,6,-2,5,-10,6,-12,33,-51,0,-10,5,4,-22,5,-17,6,5,-12,6,-12,33,-54,0,-33,5,-12,6,-2,5,-11,6,-14,33,-56,0,-13,5,4,-20,5,-9,6,5,-12,6,-14,33,-59,0,-18,5,4,-13,5,4,5,-2,6,5,6,5,-15,6,-3,29,-9,33,-62,0,-22,5,4,-3,5,4,-9,5,-15,6,-8,29,-3,33,-68,0,-35,5,-11,6,-10,29,-74,0,-35,5,-5,6,-90,0,-35,5,-2,6,-94,0,-28,5,-104,0,-18,5,-114,0,-9,5,-2083548,0]},{name:"toast",bounds:[14,113,60,72,0,0],data:[-7697,0,-94,15,-34,0,-94,15,-34,0,-94,15,-31,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-28,0,-100,9,-2087822,0]}],palette:[2037811,2829890,4278361,6844794,9478568,11979727,16777215,16564106,11894871,9064510,6044225,13185080,14576184,16756027,16770454,16578912,11851333,5358655,3185763,2321786,2510702,2307683,4289169,5018541,6537929,9753300,12123647,3942720,4597596,8545409,16229515,12743042,8727910,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};const e=128;function n(t){const s=[];for(let i=0;i<t.length;i+=1)if(t[i]<0){for(let e=t[i];e<0;e+=1)s.push(t[i+1]);i+=1}else s.push(t[i]);return s}function a(t,s,i,n){return t[s+i*e+n*e*e]}function h(t){return[(t>>16)%256,(t>>8)%256,t%256]}function r(t,s,i,e){if(0===e)return;const[n,a,r]=h(i[e-1]);t[s]=n,t[s+1]=a,t[s+2]=r,t[s+3]=255}function o(t,s,i,n){const h=s[1]-s[0]+1,o=s[3]-s[2]+1,d=document.createElement("canvas");d.width=h,d.height=o;const l=d.getContext("2d"),c=l.createImageData(e,e);for(let h=s[0];h<=s[1];h+=1)for(let o=s[2];o<=s[3];o+=1)r(c.data,4*(h+o*e),n,a(t,h,o,i));return l.putImageData(c,-s[0],-s[2]),d}function d({bounds:t,data:s},i){const e=[];for(let n=t[4];n<=t[5];n+=1)e[n]=o(s,t,n,i);return e}const l=new Map;function c(t,s=0){return l.get(t)[s]}const u=[];function p(t){return u[t]}!function(){for(const t of i.parts)t.data=n(t.data),l.set(t.name,d(t,i.palette));for(const s of i.palette)u.push(`rgb(${(t=h(s))[0]}, ${t[1]}, ${t[2]})`);var t}();const m=new t(.5,20),w=30,y=.95,f=200;class g{constructor(t,s,i=1){this.display=t,this.toast=s,this.z=i,this.pointCache=new Map}drawOne(t,s){this.display.rect(t.sub(m),t.add(m),{fillStyle:p(26),globalAlpha:s,z:this.z})}ensurePoint(s){if(!this.pointCache.has(s)){const i=this.display.width*y;this.pointCache.set(s,new t(Math.floor(Math.random()*f)/(f-1)*i-i/2,s*w))}}draw(){this.trimExcess(),this.ensureEnough();const t=Math.min(.15*Math.abs(this.toast.dy),1);for(const s of this.pointCache.values())this.drawOne(s,t)}getMinimumY(){return Math.floor((this.display.camera.y-this.display.height/2)/w)}getNumberOfFittingShapes(){return Math.ceil(this.display.height/w)}trimExcess(){const t=this.getMinimumY();for(const s of this.pointCache.keys())s<t&&this.pointCache.delete(s)}ensureEnough(){const t=this.getMinimumY(),s=t+this.getNumberOfFittingShapes();for(let i=t;i<=s;i+=1)this.ensurePoint(i)}}const x=c("planet"),v=.0025,b=.0015;const k=2,M=1e3,P=1e3,z=new t(M/2,P/2),E=P/18,T={absolute:!1,globalAlpha:1,lineJoin:"round",lineWidth:3,r:0,z:1};const S=20;const O=1,C=20,F=5,L=80,A=400,D=2*A,I=.05*A,H={basic:c("sparkles",0),hit:c("sparkles",1)};class W extends s{constructor(t,s,i){super(t.x+(Math.random()-.5)*L,t.y+(Math.random()-.5)*L,t.timestamp+s),this.r=Math.random()*Math.PI,this.dx=(Math.random()-.5)*L/A,this.dy=(Math.random()-.5)*L/A,this.dr=Math.random()/100,this.isHit=i}isExpired(t){return t-this.timestamp>(this.isHit?D:A)}tick(t){this.x+=this.dx*t,this.y+=this.dy*t,this.r+=this.dr*t;const s=1-t**-1.5;this.dx*=s,this.dy*=s,this.dr*=s}draw(s,i){const e=this.isHit?H.hit:H.basic,n=function(t,s){return s<I?s/I:(t-s)/(t-I)}(this.isHit?D:A,i-this.timestamp),a=this.isHit?1:.5;s.image(e,new t(this.x,this.y),{absolute:!0,globalAlpha:n*a,r:this.r})}}class Y{constructor(t){this.display=t,this.sparkles=new Set,this.now=-1/0}add(t,s=!1){for(let i=0;i<(s?C:O);i+=1)this.sparkles.add(new W(t,F*i,s))}tick(t,s){this.now=t,this.removeOldSparkles(),this.updateSparkles(s)}removeOldSparkles(){const t=[];for(const s of this.sparkles)s.isExpired(this.now)&&t.push(s);for(const s of t)this.sparkles.delete(s)}updateSparkles(t){for(const s of this.sparkles)s.tick(t)}draw(){for(const t of this.sparkles)t.draw(this.display,this.now)}}const $=[c("wizard"),c("wizard",1),c("wizard",2),c("wizard",3),c("wizard",4),c("wizard",5)],j=2,q=$.length-1-j,N=100;class R{constructor(t){this.display=t,this.phase=0,this.startTimestamp=0}tick(t,s){if(s){const s=Math.floor((t-this.startTimestamp)/N);0===this.phase?(this.startTimestamp=t,this.phase=1):this.phase<j?this.phase=s%j+1:this.phase=(s-j)%q+j+1}else this.phase=0}draw(){const s=new t(this.display.width/2,this.display.height/4);this.display.image($[0],s,{absolute:!0}),this.phase>0&&this.display.image($[this.phase],s,{absolute:!0})}}const V=120;const B=c("toast"),J=2*B.height,X=2*B.width,G=1.2,K=.2,Q=.001,U=25e-5,Z=.4,_=.01,tt=[new t(-X/2,-J/2),new t(-X/2,J/2),new t(X/2,J/2),new t(X/2,-J/2)];const st=new class{constructor(){this.canvas=canvas,this.canvas.width=M,this.canvas.height=P,this.context=canvas.getContext("2d"),this.context.imageSmoothingEnabled=!1,this.width=M,this.height=P,this.camera=new t(0,E)}trackToast(t){this.camera.y=t.mid.y+E}getOffset(){return z.sub(this.camera)}getTransformedPoint(t,s,i){return t?s.round():s.sub(this.camera).scale(i).add(z).round()}rect(t,s,i){const{absolute:e,r:n,z:a,...h}={...T,...i};Object.assign(this.context,h);const{x:r,y:o}=this.getTransformedPoint(e,t,a),{x:d,y:l}=this.getTransformedPoint(e,s,a);this.context.setTransform(1,0,0,1,0,0),this.context.beginPath(),this.context.rect(r,o,d-r,l-o),this.context.closePath(),h.fillStyle&&this.context.fill(),h.strokeStyle&&this.context.stroke()}image(t,s,i){const{absolute:e,r:n,z:a,...h}={...T,...i};Object.assign(this.context,h);const{x:r,y:o}=this.getTransformedPoint(e,s,a),{width:d,height:l}=t,c=Math.cos(n),u=Math.sin(n);this.context.setTransform(c,u,-u,c,r*(1-c)+o*u,o*(1-c)-r*u),this.context.drawImage(t,r-d,o-l,d*k,l*k)}clear(){this.context.clearRect(0,0,M,P)}},it=new class{constructor(s,i=0,e=0){this.display=s,this.mid=new t(i,e),this.r=.4,this.dx=.1,this.dy=0,this.dr=.01}draw(){this.display.image(B,this.mid,{r:this.r})}getTransformedPoints(t){return t.map(t=>t.rotate(this.r).add(this.mid))}tick(t){this.mid.x+=this.dx*t,this.mid.y+=this.dy*t,this.r+=this.dr*t;const s=1-t**-2.4;this.dx*=s,this.dy*=s,this.dr*=s,this.dy=this.dy*(1-K)+G*K}applyForce({x:t,y:s},{x:i,y:e}){this.dx+=i,this.dy+=e,this.dr+=(t*e-s*i)*U}ensureWithinWalls(){Math.abs(this.mid.x)>Z*this.display.width/2&&(this.dx+=_*-Math.sign(this.mid.x))}tryApplyForce(t){if(null===t)return null;const[s,i]=t;if(null===this.getIntersection(this.mid,s))return null;const e=this.getIntersection(s,i);if(null===e)return null;const n=e.sub(s).scale(Q),a=e.sub(this.mid);return this.applyForce(a,n),e}getIntersection(s,i){const e=this.getTransformedPoints(tt);e.push(e[0]);let n=null;for(let a=0;a<e.length-1;a+=1){const h=t.intersection(s,i,e[a],e[a+1]);if(null!==h){s.distance(h)<1/0&&(n=h)}}return n}}(st);!function({drawables:t,display:s,mouse:i,toast:e}){i.init();let n=0,a=!0;requestAnimationFrame(function h(r){requestAnimationFrame(h);const o=Math.min(r-n,S);if(n=r,a)a=!1;else{s.clear(),e.tick(o),e.ensureWithinWalls(),s.trackToast(e);for(const s of t)s.draw();e.draw(),i.tick(r,o),i.draw()}})}({display:st,drawables:[new class{constructor(t){this.display=t}draw(){this.sky(),this.planet(),this.ground()}sky(){this.display.rect(new t(0,0),new t(this.display.width,this.display.height),{absolute:!0,fillStyle:p(23)})}planet(){const s=new t(this.display.width/4/b,-this.display.height/7/b);this.display.image(x,s,{z:b})}ground(){const s=this.display.width/2/v,i=this.display.height/v;this.display.rect(new t(-s,i/3),new t(s,i),{fillStyle:p(5),z:v})}}(st),new g(st,it),new g(st,it,2),new g(st,it,3)],mouse:new class{constructor(t,s){this.display=t,this.toast=s,this.now=-1/0,this.points=new Set,this.lastPoint=null,this.pressed=!1,this.sparkles=new Y(t),this.wizard=new R(t)}start(t){this.pressed=!0,this.pushPoint(t)}move(t){this.pressed&&this.pushPoint(t)}clearPoints(){this.points=new Set,this.lastPoint=null}stop(){this.clearPoints(),this.pressed=!1}pushPoint(t){const{left:i,top:e,width:n,height:a}=this.display.canvas.getBoundingClientRect();this.lastPoint=new s((t.clientX-i)*this.display.width/n,(t.clientY-e)*this.display.height/a,this.now),this.points.add(this.lastPoint),this.sparkles.add(this.lastPoint)}normalizeTouchEvent(t){return t.touches[0]}init(){this.display.canvas.addEventListener("mousedown",t=>{t.preventDefault(),this.start(t)}),this.display.canvas.addEventListener("touchstart",t=>{t.preventDefault(),this.start(this.normalizeTouchEvent(t))}),this.display.canvas.addEventListener("mousemove",t=>{t.preventDefault(),this.move(t)}),this.display.canvas.addEventListener("touchmove",t=>{t.preventDefault(),this.move(this.normalizeTouchEvent(t))}),window.addEventListener("mouseup",()=>{this.stop()}),window.addEventListener("touchend",()=>{this.stop()}),window.document.addEventListener("visibilitychange",()=>{this.stop()}),window.addEventListener("contextmenu",t=>{t.preventDefault()})}getCurrentVector(){if(this.points.size<2||null===this.lastPoint)return null;const t=this.display.getOffset(),[s]=this.points;return[s.sub(t),this.lastPoint.sub(t)]}tick(t,i){if(this.sparkles.tick(t,i),this.wizard.tick(t,this.pressed),this.now=t,!this.pressed)return;this.removeOldPoints();const e=this.toast.tryApplyForce(this.getCurrentVector());null!==e&&(this.sparkles.add(s.fromPoint(e.add(this.display.getOffset()),t),!0),this.clearPoints())}removeOldPoints(){const t=[];for(const s of this.points)s.timestamp<this.now-V&&t.push(s);for(const s of t)this.points.delete(s);0===this.points.size&&(this.lastPoint=null)}draw(){this.sparkles.draw(),this.wizard.draw()}}(st,it),toast:it});
