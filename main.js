"use strict";class t{constructor(t,s){this.x=t,this.y=s}add({x:s,y:i}){return new t(this.x+s,this.y+i)}sub({x:s,y:i}){return new t(this.x-s,this.y-i)}scale(s){return new t(this.x*s,this.y*s)}rotate(s){return new t(this.x*Math.cos(s)-this.y*Math.sin(s),this.x*Math.sin(s)+this.y*Math.cos(s))}distance({x:t,y:s}){return((this.x-t)**2+(this.y-s)**2)**.5}static intersection({x:s,y:i},{x:e,y:n},{x:o,y:h},{x:a,y:r}){const l=(r-h)*(e-s)-(a-o)*(n-i);if(0===l)return null;const c=((a-o)*(i-h)-(r-h)*(s-o))/l,d=((e-s)*(i-h)-(n-i)*(s-o))/l;return c>=0&&c<=1&&d>=0&&d<=1?new t(s+c*(e-s),i+c*(n-i)):null}}class s extends t{constructor(t,s,i){super(t,s),this.timestamp=i}static fromPoint(t,i){return new s(t.x,t.y,i)}}const i=[new t(-.5,-20),new t(-.5,20),new t(.5,20),new t(.5,-20)],e=30,n=.95,o=200;class h{constructor(t,s,i=1){this.display=t,this.toast=s,this.z=i,this.pointCache=new Map}drawOne(t,s){this.display.lines(i.map(s=>s.add(t)),{fillStyle:s},this.z)}ensurePoint(s){if(!this.pointCache.has(s)){const i=this.display.width*n;this.pointCache.set(s,new t(Math.floor(Math.random()*o)/(o-1)*i-i/2,s*e))}}draw(){this.trimExcess(),this.ensureEnough();const t=`rgba(255, 255, 255, ${.15*this.toast.dy})`;for(const s of this.pointCache.values())this.drawOne(s,t)}getMinimumY(){return Math.floor((this.display.camera.y-this.display.height/2)/e)}getNumberOfFittingShapes(){return Math.ceil(this.display.height/e)}trimExcess(){const t=this.getMinimumY();for(const s of this.pointCache.keys())s<t&&this.pointCache.delete(s)}ensureEnough(){const t=this.getMinimumY(),s=t+this.getNumberOfFittingShapes();for(let i=t;i<=s;i+=1)this.ensurePoint(i)}}const a=.0025,r=.002,l={sky:"#77c3a2",sun:"#d7b366",ground:"#520016"};const c=900,d=1600,u=new t(c/2,d/2),p={lineJoin:"round",lineWidth:3};const y=20;const w=2,f=18,m=5,g=60,x=12,v=600,P=2*v,k=.05*v;function b(t){const s=document.createElement("canvas");s.width=x+20,s.height=x+20;const i=s.getContext("2d");return i.strokeStyle="rgb(255, 105, 180)",i.fillStyle=t?"rgb(255, 255, 255)":"rgb(255, 105, 180)",i.translate(10,10),i.lineWidth=1,i.beginPath(),i.moveTo(0,x/2),i.quadraticCurveTo(x/2,x/2,x/2,0),i.quadraticCurveTo(x/2,x/2,x,x/2),i.quadraticCurveTo(x/2,x/2,x/2,x),i.quadraticCurveTo(x/2,x/2,0,x/2),i.closePath(),i.stroke(),i.beginPath(),i.moveTo(0,x/2),i.quadraticCurveTo(x/2,x/2,x/2,0),i.quadraticCurveTo(x/2,x/2,x,x/2),i.quadraticCurveTo(x/2,x/2,x/2,x),i.quadraticCurveTo(x/2,x/2,0,x/2),i.closePath(),i.fill(),s}const T={basic:b(!1),hit:b(!0)};class S extends s{constructor(t,s,i){super(t.x+(Math.random()-.5)*g,t.y+(Math.random()-.5)*g,t.timestamp+s),this.dx=(Math.random()-.5)*g/v,this.dy=(Math.random()-.5)*g/v,this.isHit=i}isExpired(t){return t-this.timestamp>(this.isHit?P:v)}tick(t){this.x+=this.dx*t,this.y+=this.dy*t;const s=1-t**-1.8;this.dx*=s,this.dy*=s}draw(t,s){const i=this.isHit?T.hit:T.basic;t.globalAlpha=function(t,s){return s<k?s/k:(t-s)/(t-k)}(this.isHit?P:v,s-this.timestamp),t.drawImage(i,this.x-i.width/2,this.y-i.height/2)}}class C{constructor(t){this.display=t,this.sparkles=new Set,this.now=-1/0}add(t,s=!1){for(let i=0;i<(s?f:w);i+=1)this.sparkles.add(new S(t,m*i,s))}tick(t,s){this.now=t,this.removeOldSparkles(),this.updateSparkles(s)}removeOldSparkles(){const t=[];for(const s of this.sparkles)s.isExpired(this.now)&&t.push(s);for(const s of t)this.sparkles.delete(s)}updateSparkles(t){for(const s of this.sparkles)s.tick(t)}draw(){for(const t of this.sparkles)t.draw(this.display.context,this.now);this.display.context.globalAlpha=1}}const M=120;const E=1.2,O=.2,q=.001,F=1/4200,L=200,z=.01,A=[new t(-100,-10),new t(-100,10),new t(100,10),new t(100,-10)],W=[new t(-90,-15),new t(-90,-10),new t(90,-10),new t(90,-15)];const D=new class{constructor(){this.canvas=canvas,this.canvas.width=c,this.canvas.height=d,this.context=canvas.getContext("2d"),this.width=c,this.height=d,this.camera=new t(0,0)}trackToast(t){this.camera.y=t.position.y}getOffset(){return u.sub(this.camera)}getTransformedPoint(t,s){return t.sub(this.camera).scale(s).add(u)}lines([t,...s],i,e=1){Object.assign(this.context,p,i),this.context.beginPath();const{x:n,y:o}=this.getTransformedPoint(t,e);this.context.moveTo(n,o);for(const t of s){const{x:s,y:i}=this.getTransformedPoint(t,e);this.context.lineTo(s,i)}this.context.closePath(),i.fillStyle&&this.context.fill(),i.strokeStyle&&this.context.stroke()}circle(t,s,i,e=1){Object.assign(this.context,p,i),this.context.beginPath();const{x:n,y:o}=this.getTransformedPoint(t,e);this.context.arc(n,o,s*e,0,2*Math.PI),i.fillStyle&&this.context.fill()}clear(){this.context.clearRect(0,0,c,d)}},I=new class{constructor(s,i=0,e=0){this.display=s,this.position=new t(i,e),this.r=.4,this.dx=.1,this.dy=0,this.dr=.01}draw(){this.drawToast(),this.drawButter()}getTransformedPoints(t){return t.map(t=>t.rotate(this.r).add(this.position))}drawToast(){const t=this.getTransformedPoints(A);this.display.lines(t,{fillStyle:"rgba(195, 134, 68, 1)",strokeStyle:"rgba(195, 134, 68, 1)"})}drawButter(){const t=this.getTransformedPoints(W);this.display.lines(t,{fillStyle:"rgba(248, 239, 204, 1)",strokeStyle:"rgba(248, 239, 204, 1)"})}tick(t){this.position.x+=this.dx*t,this.position.y+=this.dy*t,this.r+=this.dr*t;const s=1-t**-2.4;this.dx*=s,this.dy*=s,this.dr*=s,this.dy=this.dy*(1-O)+E*O}applyForce({x:t,y:s},{x:i,y:e}){this.dx+=i,this.dy+=e,this.dr+=(t*e-s*i)*F}ensureWithinWalls(){Math.abs(this.position.x)>L&&(this.dx+=z*-Math.sign(this.position.x))}tryApplyForce(t){if(null===t)return null;const[s,i]=t;if(null===this.getIntersection(this.position,s))return null;const e=this.getIntersection(s,i);if(null===e)return null;const n=e.sub(s).scale(q),o=e.sub(this.position);return this.applyForce(o,n),e}getIntersection(s,i){const e=this.getTransformedPoints(A);e.push(e[0]);let n=null;for(let o=0;o<e.length-1;o+=1){const h=t.intersection(s,i,e[o],e[o+1]);if(null!==h){s.distance(h)<1/0&&(n=h)}}return n}}(D),H=[new class{constructor(t){this.display=t,t.canvas.style.backgroundColor=l.sky}draw(){this.sun(),this.ground()}sun(){this.display.circle(new t(this.display.width/r/5,-this.display.height/r/12),160/r,{fillStyle:l.sun},r)}ground(){const s=this.display.width/2/a,i=this.display.height/a;this.display.lines([new t(-s,-i/15),new t(-s,i),new t(s,i),new t(s,-i/15)],{fillStyle:l.ground},a)}}(D),new h(D,I),new h(D,I,2),new h(D,I,3)];!function({drawables:t,display:s,mouse:i,toast:e}){i.init();let n=0,o=!0;requestAnimationFrame(function h(a){requestAnimationFrame(h);const r=Math.min(a-n,y);if(n=a,o)o=!1;else{s.clear(),e.tick(r),e.ensureWithinWalls(),s.trackToast(e);for(const s of t)s.draw();e.draw(),i.tick(a,r),i.draw()}})}({display:D,drawables:H,mouse:new class{constructor(t,s){this.display=t,this.toast=s,this.now=-1/0,this.points=new Set,this.lastPoint=null,this.pressed=!1,this.sparkles=new C(t)}start(t){this.pressed=!0,this.pushPoint(t)}move(t){this.pressed&&this.pushPoint(t)}clearPoints(){this.points=new Set,this.lastPoint=null}stop(){this.clearPoints(),this.pressed=!1}pushPoint(t){const{left:i,top:e,width:n,height:o}=this.display.canvas.getBoundingClientRect();this.lastPoint=new s((t.clientX-i)*this.display.width/n,(t.clientY-e)*this.display.height/o,this.now),this.points.add(this.lastPoint),this.sparkles.add(this.lastPoint)}normalizeTouchEvent(t){return t.touches[0]}init(){this.display.canvas.addEventListener("mousedown",t=>{t.preventDefault(),this.start(t)}),this.display.canvas.addEventListener("touchstart",t=>{t.preventDefault(),this.start(this.normalizeTouchEvent(t))}),this.display.canvas.addEventListener("mousemove",t=>{t.preventDefault(),this.move(t)}),this.display.canvas.addEventListener("touchmove",t=>{t.preventDefault(),this.move(this.normalizeTouchEvent(t))}),window.addEventListener("mouseup",()=>{this.stop()}),window.addEventListener("touchend",()=>{this.stop()}),window.document.addEventListener("visibilitychange",()=>{this.stop()}),window.addEventListener("contextmenu",t=>{t.preventDefault()})}getCurrentVector(){if(this.points.size<2||null===this.lastPoint)return null;const t=this.display.getOffset(),[s]=this.points;return[s.sub(t),this.lastPoint.sub(t)]}tick(t,i){if(this.sparkles.tick(t,i),this.now=t,!this.pressed)return;this.removeOldPoints();const e=this.toast.tryApplyForce(this.getCurrentVector());null!==e&&(this.sparkles.add(s.fromPoint(e.add(this.display.getOffset()),t),!0),this.clearPoints())}removeOldPoints(){const t=[];for(const s of this.points)s.timestamp<this.now-M&&t.push(s);for(const s of t)this.points.delete(s);0===this.points.size&&(this.lastPoint=null)}draw(){this.sparkles.draw()}}(D,I),toast:I});
